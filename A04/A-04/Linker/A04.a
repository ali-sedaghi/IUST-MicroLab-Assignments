;// Ali Sedaghi
;// 97521378
;
;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;// Init time
;unsigned int HOUR_TENS = 2;
;unsigned int HOUR_ONES = 3;
;unsigned int MINUTE_TENS = 5;
;unsigned int MINUTE_ONES = 8;
;unsigned int SECOND_TENS = 0;
;unsigned int SECOND_ONES = 0;
;char DP = 0x80;

	.DSEG
;
;char convert[] = {
;    0x3F,
;    0x06,
;    0x5B,
;    0x4F,
;    0x66,
;    0x6D,
;    0x7D,
;    0x07,
;    0x7F,
;    0x6F};
;
;// Timer1 output compare A interrupt service routine
;interrupt [TIM1_COMPA] void timer1_compa_isr(void) {
; 0000 001D interrupt [8] void timer1_compa_isr(void) {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 001E     DP = 0x00;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 001F     SECOND_ONES += 1;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0020 
; 0000 0021     if (SECOND_ONES % 2 == 0)
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0022         DP = 0x80;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 0023 
; 0000 0024     if (SECOND_ONES == 10) {
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0025         SECOND_ONES = 0;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0026         SECOND_TENS += 1;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0027 
; 0000 0028         if (SECOND_TENS == 6) {
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0029             SECOND_TENS = 0;
;PCODE: $00000025 VOL: 0
; 0000 002A             MINUTE_ONES += 1;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 002B 
; 0000 002C             if (MINUTE_ONES == 10) {
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 002D                 MINUTE_ONES = 0;
;PCODE: $0000002C VOL: 0
; 0000 002E                 MINUTE_TENS += 1;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 002F 
; 0000 0030                 if (MINUTE_TENS == 6) {
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0031                     MINUTE_TENS = 0;
;PCODE: $00000033 VOL: 0
; 0000 0032                     HOUR_ONES += 1;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0033 
; 0000 0034                     if (HOUR_ONES == 4 && HOUR_TENS == 2) {
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0035                         HOUR_ONES = 0;
;PCODE: $00000041 VOL: 0
; 0000 0036                         HOUR_TENS = 0;
;PCODE: $00000042 VOL: 0
; 0000 0037                     }
; 0000 0038 
; 0000 0039                     else if (HOUR_ONES == 10 && HOUR_TENS == 0) {
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 003A                         HOUR_ONES = 0;
;PCODE: $0000004E VOL: 0
; 0000 003B                         HOUR_TENS += 1;
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 003C                     }
; 0000 003D                 }
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 003E             }
;PCODE: $00000054 VOL: 0
; 0000 003F        }
;PCODE: $00000055 VOL: 0
; 0000 0040     }
;PCODE: $00000056 VOL: 0
; 0000 0041 }
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;
;void main(void) {
; 0000 0043 void main(void) {
;PCODE: $0000005B VOL: 0
; 0000 0044 // Port C and D as out
; 0000 0045 PORTC = 0x00;
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 0046 DDRC = 0xFF;
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 0047 PORTD = 0x00;
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 0048 DDRD = 0xFF;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 0049 
; 0000 004A // Timer 1 config
; 0000 004B TCCR1A = 0x00;
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 004C TCCR1B = 0x0C;
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 004D TCNT1H = 0x00;
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 004E TCNT1L = 0x00;
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 004F ICR1H = 0x00;
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 0050 ICR1L = 0x00;
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 0051 OCR1AH = 0x7A;
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 0052 OCR1AL = 0x12;
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0000 0053 OCR1BH = 0x00;
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 0054 OCR1BL = 0x00;
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 0055 
; 0000 0056 TIMSK = 0x12;
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 0057 
; 0000 0058 // Global enable interrupts
; 0000 0059 #asm("sei")
;PCODE: $0000007A VOL: 0
	sei
;PCODE: $0000007B VOL: 0
; 0000 005A 
; 0000 005B while (1)
;PCODE: $0000007C VOL: 0
; 0000 005C {
; 0000 005D     // Digit [*-----]
; 0000 005E     PORTD = 0b11111110;
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 005F     PORTC = convert[HOUR_TENS];
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 0060     delay_ms(5);
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 0061 
; 0000 0062     // Digit [-*----]
; 0000 0063     PORTD = 0b11111101;
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0000 0064     PORTC = convert[HOUR_ONES] | DP;
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0000 0065     delay_ms(5);
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 0066 
; 0000 0067     // Digit [--*---]
; 0000 0068     PORTD = 0b11111011;
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 0069     PORTC = convert[MINUTE_TENS];
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 006A     delay_ms(5);
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0000 006B 
; 0000 006C     // Digit [---*--]
; 0000 006D     PORTD = 0b11110111;
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 006E     PORTC = convert[MINUTE_ONES] | DP;
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
; 0000 006F     delay_ms(5);
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 0070 
; 0000 0071     // Digit [----*-]
; 0000 0072     PORTD = 0b11101111;
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 0073     PORTC = convert[SECOND_TENS];
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 0074     delay_ms(5);
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
; 0000 0075 
; 0000 0076     // Digit [-----*]
; 0000 0077     PORTD = 0b11011111;
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
; 0000 0078     PORTC = convert[SECOND_ONES] | DP;
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0000 0079     delay_ms(5);
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
; 0000 007A }
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 007B }
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
