
AVRASM ver. 2.1.30  C:\Users\ali_s\Desktop\AVR Projects\A-11\List\A11.asm Sat Dec 25 09:56:04 2021

C:\Users\ali_s\Desktop\AVR Projects\A-11\List\A11.asm(1072): warning: Register r5 already defined by the .DEF directive
C:\Users\ali_s\Desktop\AVR Projects\A-11\List\A11.asm(1073): warning: Register r4 already defined by the .DEF directive
C:\Users\ali_s\Desktop\AVR Projects\A-11\List\A11.asm(1074): warning: Register r7 already defined by the .DEF directive
C:\Users\ali_s\Desktop\AVR Projects\A-11\List\A11.asm(1075): warning: Register r6 already defined by the .DEF directive
C:\Users\ali_s\Desktop\AVR Projects\A-11\List\A11.asm(1076): warning: Register r9 already defined by the .DEF directive
C:\Users\ali_s\Desktop\AVR Projects\A-11\List\A11.asm(1077): warning: Register r8 already defined by the .DEF directive
C:\Users\ali_s\Desktop\AVR Projects\A-11\List\A11.asm(1078): warning: Register r11 already defined by the .DEF directive
C:\Users\ali_s\Desktop\AVR Projects\A-11\List\A11.asm(1079): warning: Register r12 already defined by the .DEF directive
C:\Users\ali_s\Desktop\AVR Projects\A-11\List\A11.asm(1080): warning: Register r10 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.3 Standard
                 ;(C) Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega32
                 ;Program type             : Application
                 ;Clock frequency          : 8.000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Size
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 512 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;Global 'const' stored in FLASH     : No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions         : On
                 ;Smart register allocation          : On
                 ;Automatic register allocation      : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2143
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __hour=R5
                 	.DEF __min=R4
                 	.DEF __sec=R7
                 	.DEF _week_day=R6
                 	.DEF __day=R9
                 	.DEF __month=R8
                 	.DEF __year=R11
                 	.DEF _s1=R12
                 	.DEF __lcd_x=R10
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 004d 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _0x0:
00002a 4954
00002b 454d
00002c 203e
00002d 4400      	.DB  0x54,0x49,0x4D,0x45,0x3E,0x20,0x0,0x44
00002e 5441
00002f 3e45
000030 0020
000031 3032      	.DB  0x41,0x54,0x45,0x3E,0x20,0x0,0x32,0x30
000032 4100
000033 696c
000034 5320
000035 6465      	.DB  0x0,0x41,0x6C,0x69,0x20,0x53,0x65,0x64
000036 6761
000037 6968
C:\Users\ali_s\Desktop\AVR Projects\A-11\List\A11.asm(1115): warning: .cseg .db misalignment - padding zero byte
000038 0000      	.DB  0x61,0x67,0x68,0x69,0x0
                 _0x2020003:
000039 c080      	.DB  0x80,0xC0
                 _0x2040060:
C:\Users\ali_s\Desktop\AVR Projects\A-11\List\A11.asm(1119): warning: .cseg .db misalignment - padding zero byte
00003a 0001      	.DB  0x1
                 _0x2040000:
00003b 4e2d
00003c 4e41
00003d 4900
00003e 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Users\ali_s\Desktop\AVR Projects\A-11\List\A11.asm(1122): warning: .cseg .db misalignment - padding zero byte
00003f 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000040 0007      	.DW  0x07
000041 0260      	.DW  _0x6
000042 0054      	.DW  _0x0*2
                 
000043 0007      	.DW  0x07
000044 0267      	.DW  _0x6+7
000045 005b      	.DW  _0x0*2+7
                 
000046 0002      	.DW  0x02
000047 0278      	.DW  __base_y_G101
000048 0072      	.DW  _0x2020003*2
                 
000049 0001      	.DW  0x01
00004a 027e      	.DW  __seed_G102
00004b 0074      	.DW  _0x2040060*2
                 
                 _0xFFFFFFFF:
00004c 0000      	.DW  0
                 
                 __RESET:
00004d 94f8      	CLI
00004e 27ee      	CLR  R30
00004f bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000050 e0f1      	LDI  R31,1
000051 bffb      	OUT  GICR,R31
000052 bfeb      	OUT  GICR,R30
000053 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
000054 e1f8      	LDI  R31,0x18
000055 bdf1      	OUT  WDTCR,R31
000056 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
000057 e08d      	LDI  R24,(14-2)+1
000058 e0a2      	LDI  R26,2
000059 27bb      	CLR  R27
                 __CLEAR_REG:
00005a 93ed      	ST   X+,R30
00005b 958a      	DEC  R24
00005c f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00005d e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00005e e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00005f e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000060 93ed      	ST   X+,R30
000061 9701      	SBIW R24,1
000062 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000063 e8e0      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000064 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000065 9185      	LPM  R24,Z+
000066 9195      	LPM  R25,Z+
000067 9700      	SBIW R24,0
000068 f061      	BREQ __GLOBAL_INI_END
000069 91a5      	LPM  R26,Z+
00006a 91b5      	LPM  R27,Z+
00006b 9005      	LPM  R0,Z+
00006c 9015      	LPM  R1,Z+
00006d 01bf      	MOVW R22,R30
00006e 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00006f 9005      	LPM  R0,Z+
000070 920d      	ST   X+,R0
000071 9701      	SBIW R24,1
000072 f7e1      	BRNE __GLOBAL_INI_LOOP
000073 01fb      	MOVW R30,R22
000074 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000075 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000076 bfed      	OUT  SPL,R30
000077 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000078 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000079 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00007a e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00007b 940c 007d 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;// Ali Sedaghi
                 ;// 97521378
                 ;
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <i2c.h>
                 ;#include <ds1307.h>
                 ;#include <alcd.h>
                 ;#include <stdlib.h>
                 ;#include <delay.h>
                 ;
                 ;unsigned char _hour, _min, _sec;
                 ;unsigned char week_day, _day,_month,_year;
                 ;unsigned char* s1;
                 ;unsigned char* s2;
                 ;unsigned char* s3;
                 ;unsigned char* s4;
                 ;unsigned char* s5;
                 ;unsigned char* s6;
                 ;
                 ;void main(void) {
                 ; 0000 0014 void main(void) {
                 
                 	.CSEG
                 _main:
                 ; 0000 0015 	PORTA = 0x00;
00007d e0e0      	LDI  R30,LOW(0)
00007e bbeb      	OUT  0x1B,R30
                 ; 0000 0016 	DDRA = 0x00;
00007f bbea      	OUT  0x1A,R30
                 ; 0000 0017 	PORTB = 0x00;
000080 bbe8      	OUT  0x18,R30
                 ; 0000 0018 	DDRB = 0x00;
000081 bbe7      	OUT  0x17,R30
                 ; 0000 0019 	PORTC = 0x00;
000082 bbe5      	OUT  0x15,R30
                 ; 0000 001A 	DDRC = 0x00;
000083 bbe4      	OUT  0x14,R30
                 ; 0000 001B 	PORTD = 0x00;
000084 bbe2      	OUT  0x12,R30
                 ; 0000 001C 	DDRD = 0x00;
000085 bbe1      	OUT  0x11,R30
                 ; 0000 001D 
                 ; 0000 001E 	i2c_init();
000086 940e 0289 	CALL _i2c_init
                 ; 0000 001F 	rtc_init(0, 0, 0);
000088 e0e0      	LDI  R30,LOW(0)
000089 93ea      	ST   -Y,R30
00008a 93ea      	ST   -Y,R30
00008b e0a0      	LDI  R26,LOW(0)
00008c d091      	RCALL _rtc_init
                 ; 0000 0020 	lcd_init(20);
00008d e1a4      	LDI  R26,LOW(20)
00008e d154      	RCALL _lcd_init
                 ; 0000 0021 
                 ; 0000 0022 	while (1) {
                 _0x3:
                 ; 0000 0023 		lcd_clear();
00008f d10a      	RCALL _lcd_clear
                 ; 0000 0024 
                 ; 0000 0025 		//lcd_gotoxy(0, 0);
                 ; 0000 0026 		lcd_puts("TIME> ");
                +
000090 e6a0     +LDI R26 , LOW ( _0x6 + ( 0 ) )
000091 e0b2     +LDI R27 , HIGH ( _0x6 + ( 0 ) )
                 	__POINTW2MN _0x6,0
000092 d12e      	RCALL _lcd_puts
                 ; 0000 0027 		lcd_gotoxy(0, 1);
000093 e0e0      	LDI  R30,LOW(0)
000094 93ea      	ST   -Y,R30
000095 e0a1      	LDI  R26,LOW(1)
000096 d0f4      	RCALL _lcd_gotoxy
                 ; 0000 0028 		lcd_puts("DATE> ");
                +
000097 e6a7     +LDI R26 , LOW ( _0x6 + ( 7 ) )
000098 e0b2     +LDI R27 , HIGH ( _0x6 + ( 7 ) )
                 	__POINTW2MN _0x6,7
000099 d127      	RCALL _lcd_puts
                 ; 0000 0029 
                 ; 0000 002A 		rtc_get_time(&_hour, &_min, &_sec);
00009a e0e5      	LDI  R30,LOW(5)
00009b e0f0      	LDI  R31,HIGH(5)
00009c 93fa      	ST   -Y,R31
00009d 93ea      	ST   -Y,R30
00009e e0e4      	LDI  R30,LOW(4)
00009f e0f0      	LDI  R31,HIGH(4)
0000a0 93fa      	ST   -Y,R31
0000a1 93ea      	ST   -Y,R30
0000a2 e0a7      	LDI  R26,LOW(7)
0000a3 e0b0      	LDI  R27,HIGH(7)
0000a4 d092      	RCALL _rtc_get_time
                 ; 0000 002B 		rtc_get_date(&week_day, &_day, &_month, &_year);
0000a5 e0e6      	LDI  R30,LOW(6)
0000a6 e0f0      	LDI  R31,HIGH(6)
0000a7 93fa      	ST   -Y,R31
0000a8 93ea      	ST   -Y,R30
0000a9 e0e9      	LDI  R30,LOW(9)
0000aa e0f0      	LDI  R31,HIGH(9)
0000ab 93fa      	ST   -Y,R31
0000ac 93ea      	ST   -Y,R30
0000ad e0e8      	LDI  R30,LOW(8)
0000ae e0f0      	LDI  R31,HIGH(8)
0000af 93fa      	ST   -Y,R31
0000b0 93ea      	ST   -Y,R30
0000b1 e0ab      	LDI  R26,LOW(11)
0000b2 e0b0      	LDI  R27,HIGH(11)
0000b3 d09c      	RCALL _rtc_get_date
                 ; 0000 002C 
                 ; 0000 002D 		// Display Time
                 ; 0000 002E 		lcd_gotoxy(6, 0);
0000b4 e0e6      	LDI  R30,LOW(6)
0000b5 93ea      	ST   -Y,R30
0000b6 e0a0      	LDI  R26,LOW(0)
0000b7 d0d3      	RCALL _lcd_gotoxy
                 ; 0000 002F 
                 ; 0000 0030 		itoa(_hour, s1);
0000b8 2de5      	MOV  R30,R5
0000b9 940e 024d 	CALL SUBOPT_0x0
0000bb 01d6      	MOVW R26,R12
0000bc 940e 0212 	CALL _itoa
                 ; 0000 0031 		lcd_puts(s1);
0000be 01d6      	MOVW R26,R12
0000bf 940e 0251 	CALL SUBOPT_0x1
                 ; 0000 0032 		lcd_putsf(" ");
                 ; 0000 0033 
                 ; 0000 0034 		itoa(_min, s2);
0000c1 2de4      	MOV  R30,R4
0000c2 940e 024d 	CALL SUBOPT_0x0
0000c4 91a0 026e 	LDS  R26,_s2
0000c6 91b0 026f 	LDS  R27,_s2+1
0000c8 940e 0212 	CALL _itoa
                 ; 0000 0035 		lcd_puts(s2);
0000ca 91a0 026e 	LDS  R26,_s2
0000cc 91b0 026f 	LDS  R27,_s2+1
0000ce 940e 0251 	CALL SUBOPT_0x1
                 ; 0000 0036 		lcd_putsf(" ");
                 ; 0000 0037 
                 ; 0000 0038 		itoa(_sec, s3);
0000d0 2de7      	MOV  R30,R7
0000d1 940e 024d 	CALL SUBOPT_0x0
0000d3 91a0 0270 	LDS  R26,_s3
0000d5 91b0 0271 	LDS  R27,_s3+1
0000d7 940e 0212 	CALL _itoa
                 ; 0000 0039 		lcd_puts(s3);
0000d9 91a0 0270 	LDS  R26,_s3
0000db 91b0 0271 	LDS  R27,_s3+1
0000dd d0e3      	RCALL _lcd_puts
                 ; 0000 003A 
                 ; 0000 003B 		// Display Date
                 ; 0000 003C 		lcd_gotoxy(6, 1);
0000de e0e6      	LDI  R30,LOW(6)
0000df 93ea      	ST   -Y,R30
0000e0 e0a1      	LDI  R26,LOW(1)
0000e1 d0a9      	RCALL _lcd_gotoxy
                 ; 0000 003D 
                 ; 0000 003E 		itoa(_day, s4);
0000e2 2de9      	MOV  R30,R9
0000e3 940e 024d 	CALL SUBOPT_0x0
0000e5 91a0 0272 	LDS  R26,_s4
0000e7 91b0 0273 	LDS  R27,_s4+1
0000e9 940e 0212 	CALL _itoa
                 ; 0000 003F 		lcd_puts(s4);
0000eb 91a0 0272 	LDS  R26,_s4
0000ed 91b0 0273 	LDS  R27,_s4+1
0000ef 940e 0251 	CALL SUBOPT_0x1
                 ; 0000 0040 		lcd_putsf(" ");
                 ; 0000 0041 
                 ; 0000 0042 		itoa(_month, s5);
0000f1 2de8      	MOV  R30,R8
0000f2 940e 024d 	CALL SUBOPT_0x0
0000f4 91a0 0274 	LDS  R26,_s5
0000f6 91b0 0275 	LDS  R27,_s5+1
0000f8 940e 0212 	CALL _itoa
                 ; 0000 0043 		lcd_puts(s5);
0000fa 91a0 0274 	LDS  R26,_s5
0000fc 91b0 0275 	LDS  R27,_s5+1
0000fe 940e 0251 	CALL SUBOPT_0x1
                 ; 0000 0044 		lcd_putsf(" ");
                 ; 0000 0045 
                 ; 0000 0046 		lcd_putsf("20");
                +
000100 e6a2     +LDI R26 , LOW ( 2 * _0x0 + ( 14 ) )
000101 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 14 ) )
                 	__POINTW2FN _0x0,14
000102 d0cd      	RCALL _lcd_putsf
                 ; 0000 0047 		itoa(_year, s6);
000103 2deb      	MOV  R30,R11
000104 940e 024d 	CALL SUBOPT_0x0
000106 91a0 0276 	LDS  R26,_s6
000108 91b0 0277 	LDS  R27,_s6+1
00010a 940e 0212 	CALL _itoa
                 ; 0000 0048 		lcd_puts(s6);
00010c 91a0 0276 	LDS  R26,_s6
00010e 91b0 0277 	LDS  R27,_s6+1
000110 d0b0      	RCALL _lcd_puts
                 ; 0000 0049 
                 ; 0000 004A 		// Display my name
                 ; 0000 004B 		lcd_gotoxy(0, 2);
000111 e0e0      	LDI  R30,LOW(0)
000112 93ea      	ST   -Y,R30
000113 e0a2      	LDI  R26,LOW(2)
000114 d076      	RCALL _lcd_gotoxy
                 ; 0000 004C         lcd_putsf("Ali Sedaghi");
                +
000115 e6a5     +LDI R26 , LOW ( 2 * _0x0 + ( 17 ) )
000116 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 17 ) )
                 	__POINTW2FN _0x0,17
000117 d0b8      	RCALL _lcd_putsf
                 ; 0000 004D 
                 ; 0000 004E         delay_ms(1000);
000118 eea8      	LDI  R26,LOW(1000)
000119 e0b3      	LDI  R27,HIGH(1000)
00011a 940e 02da 	CALL _delay_ms
                 ; 0000 004F     }
00011c cf72      	RJMP _0x3
                 ; 0000 0050 }
                 _0x7:
00011d cfff      	RJMP _0x7
                 
                 	.DSEG
                 _0x6:
000260           	.BYTE 0xE
                 
                 	.CSEG
                 _rtc_init:
00011e 93aa      	ST   -Y,R26
00011f 81ea      	LDD  R30,Y+2
000120 70e3      	ANDI R30,LOW(0x3)
000121 83ea      	STD  Y+2,R30
000122 81e9      	LDD  R30,Y+1
000123 30e0      	CPI  R30,0
000124 f019      	BREQ _0x2000003
000125 81ea      	LDD  R30,Y+2
000126 61e0      	ORI  R30,0x10
000127 83ea      	STD  Y+2,R30
                 _0x2000003:
000128 81e8      	LD   R30,Y
000129 30e0      	CPI  R30,0
00012a f019      	BREQ _0x2000004
00012b 81ea      	LDD  R30,Y+2
00012c 68e0      	ORI  R30,0x80
00012d 83ea      	STD  Y+2,R30
                 _0x2000004:
00012e 940e 0257 	CALL SUBOPT_0x2
000130 e0a7      	LDI  R26,LOW(7)
000131 940e 02c2 	CALL _i2c_write
000133 81aa      	LDD  R26,Y+2
000134 940e 025c 	CALL SUBOPT_0x3
000136 c0aa      	RJMP _0x20E0003
                 _rtc_get_time:
000137 93ba      	ST   -Y,R27
000138 93aa      	ST   -Y,R26
000139 940e 0257 	CALL SUBOPT_0x2
00013b e0a0      	LDI  R26,LOW(0)
00013c 940e 025c 	CALL SUBOPT_0x3
00013e 940e 0260 	CALL SUBOPT_0x4
000140 940e 0268 	CALL SUBOPT_0x5
000142 940e 026f 	CALL SUBOPT_0x6
000144 940e 0275 	CALL SUBOPT_0x7
000146 2fae      	MOV  R26,R30
000147 940e 0240 	CALL _bcd2bin
000149 81ac      	LDD  R26,Y+4
00014a 81bd      	LDD  R27,Y+4+1
00014b 93ec      	ST   X,R30
00014c 940e 029d 	CALL _i2c_stop
00014e 9626      	ADIW R28,6
00014f 9508      	RET
                 _rtc_get_date:
000150 93ba      	ST   -Y,R27
000151 93aa      	ST   -Y,R26
000152 940e 0257 	CALL SUBOPT_0x2
000154 e0a3      	LDI  R26,LOW(3)
000155 940e 025c 	CALL SUBOPT_0x3
000157 940e 0260 	CALL SUBOPT_0x4
000159 81ae      	LDD  R26,Y+6
00015a 81bf      	LDD  R27,Y+6+1
00015b 93ec      	ST   X,R30
00015c 940e 026f 	CALL SUBOPT_0x6
00015e 81ac      	LDD  R26,Y+4
00015f 81bd      	LDD  R27,Y+4+1
000160 93ec      	ST   X,R30
000161 940e 026f 	CALL SUBOPT_0x6
000163 940e 0275 	CALL SUBOPT_0x7
000165 940e 0268 	CALL SUBOPT_0x5
000167 940e 029d 	CALL _i2c_stop
000169 9628      	ADIW R28,8
00016a 9508      	RET
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G101:
00016b 93aa      	ST   -Y,R26
00016c b3eb      	IN   R30,0x1B
00016d 70ef      	ANDI R30,LOW(0xF)
00016e 2fae      	MOV  R26,R30
00016f 81e8      	LD   R30,Y
000170 7fe0      	ANDI R30,LOW(0xF0)
000171 2bea      	OR   R30,R26
000172 bbeb      	OUT  0x1B,R30
                +
000173 e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
000174 958a     +DEC R24
000175 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
000176 9ada      	SBI  0x1B,2
                +
000177 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000178 958a     +DEC R24
000179 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00017a 98da      	CBI  0x1B,2
                +
00017b e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
00017c 958a     +DEC R24
00017d f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00017e c091      	RJMP _0x20E0001
                 __lcd_write_data:
00017f 93aa      	ST   -Y,R26
000180 81a8      	LD   R26,Y
000181 dfe9      	RCALL __lcd_write_nibble_G101
000182 81e8          ld    r30,y
000183 95e2          swap  r30
000184 83e8          st    y,r30
000185 81a8      	LD   R26,Y
000186 dfe4      	RCALL __lcd_write_nibble_G101
                +
000187 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
000188 958a     +DEC R24
000189 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
00018a c085      	RJMP _0x20E0001
                 _lcd_gotoxy:
00018b 93aa      	ST   -Y,R26
00018c 81e8      	LD   R30,Y
00018d e0f0      	LDI  R31,0
00018e 58e8      	SUBI R30,LOW(-__base_y_G101)
00018f 4ffd      	SBCI R31,HIGH(-__base_y_G101)
000190 81e0      	LD   R30,Z
000191 81a9      	LDD  R26,Y+1
000192 0fae      	ADD  R26,R30
000193 dfeb      	RCALL __lcd_write_data
000194 80a9      	LDD  R10,Y+1
000195 81e8      	LD   R30,Y
000196 93e0 027c 	STS  __lcd_y,R30
000198 9622      	ADIW R28,2
000199 9508      	RET
                 _lcd_clear:
00019a e0a2      	LDI  R26,LOW(2)
00019b 940e 027b 	CALL SUBOPT_0x8
00019d e0ac      	LDI  R26,LOW(12)
00019e dfe0      	RCALL __lcd_write_data
00019f e0a1      	LDI  R26,LOW(1)
0001a0 940e 027b 	CALL SUBOPT_0x8
0001a2 e0e0      	LDI  R30,LOW(0)
0001a3 93e0 027c 	STS  __lcd_y,R30
0001a5 2eae      	MOV  R10,R30
0001a6 9508      	RET
                 _lcd_putchar:
0001a7 93aa      	ST   -Y,R26
0001a8 81a8      	LD   R26,Y
0001a9 30aa      	CPI  R26,LOW(0xA)
0001aa f021      	BREQ _0x2020005
0001ab 91e0 027d 	LDS  R30,__lcd_maxx
0001ad 16ae      	CP   R10,R30
0001ae f060      	BRLO _0x2020004
                 _0x2020005:
0001af e0e0      	LDI  R30,LOW(0)
0001b0 93ea      	ST   -Y,R30
0001b1 91a0 027c 	LDS  R26,__lcd_y
0001b3 5faf      	SUBI R26,-LOW(1)
0001b4 93a0 027c 	STS  __lcd_y,R26
0001b6 dfd4      	RCALL _lcd_gotoxy
0001b7 81a8      	LD   R26,Y
0001b8 30aa      	CPI  R26,LOW(0xA)
0001b9 f409      	BRNE _0x2020007
0001ba c055      	RJMP _0x20E0001
                 _0x2020007:
                 _0x2020004:
0001bb 94a3      	INC  R10
0001bc 9ad8      	SBI  0x1B,0
0001bd 81a8      	LD   R26,Y
0001be dfc0      	RCALL __lcd_write_data
0001bf 98d8      	CBI  0x1B,0
0001c0 c04f      	RJMP _0x20E0001
                 _lcd_puts:
0001c1 93ba      	ST   -Y,R27
0001c2 93aa      	ST   -Y,R26
0001c3 931a      	ST   -Y,R17
                 _0x2020008:
0001c4 81a9      	LDD  R26,Y+1
0001c5 81ba      	LDD  R27,Y+1+1
0001c6 91ed      	LD   R30,X+
0001c7 83a9      	STD  Y+1,R26
0001c8 83ba      	STD  Y+1+1,R27
0001c9 2f1e      	MOV  R17,R30
0001ca 30e0      	CPI  R30,0
0001cb f019      	BREQ _0x202000A
0001cc 2fa1      	MOV  R26,R17
0001cd dfd9      	RCALL _lcd_putchar
0001ce cff5      	RJMP _0x2020008
                 _0x202000A:
0001cf c010      	RJMP _0x20E0002
                 _lcd_putsf:
0001d0 93ba      	ST   -Y,R27
0001d1 93aa      	ST   -Y,R26
0001d2 931a      	ST   -Y,R17
                 _0x202000B:
0001d3 81e9      	LDD  R30,Y+1
0001d4 81fa      	LDD  R31,Y+1+1
0001d5 9631      	ADIW R30,1
0001d6 83e9      	STD  Y+1,R30
0001d7 83fa      	STD  Y+1+1,R31
0001d8 9731      	SBIW R30,1
0001d9 91e4      	LPM  R30,Z
0001da 2f1e      	MOV  R17,R30
0001db 30e0      	CPI  R30,0
0001dc f019      	BREQ _0x202000D
0001dd 2fa1      	MOV  R26,R17
0001de dfc8      	RCALL _lcd_putchar
0001df cff3      	RJMP _0x202000B
                 _0x202000D:
                 _0x20E0002:
0001e0 8118      	LDD  R17,Y+0
                 _0x20E0003:
0001e1 9623      	ADIW R28,3
0001e2 9508      	RET
                 _lcd_init:
0001e3 93aa      	ST   -Y,R26
0001e4 b3ea      	IN   R30,0x1A
0001e5 6fe0      	ORI  R30,LOW(0xF0)
0001e6 bbea      	OUT  0x1A,R30
0001e7 9ad2      	SBI  0x1A,2
0001e8 9ad0      	SBI  0x1A,0
0001e9 9ad1      	SBI  0x1A,1
0001ea 98da      	CBI  0x1B,2
0001eb 98d8      	CBI  0x1B,0
0001ec 98d9      	CBI  0x1B,1
0001ed 81e8      	LD   R30,Y
0001ee 93e0 027d 	STS  __lcd_maxx,R30
0001f0 58e0      	SUBI R30,-LOW(128)
                +
0001f1 93e0 027a+STS __base_y_G101 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G101,2
0001f3 81e8      	LD   R30,Y
0001f4 54e0      	SUBI R30,-LOW(192)
                +
0001f5 93e0 027b+STS __base_y_G101 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G101,3
0001f7 e1a4      	LDI  R26,LOW(20)
0001f8 e0b0      	LDI  R27,0
0001f9 940e 02da 	CALL _delay_ms
0001fb 940e 0281 	CALL SUBOPT_0x9
0001fd 940e 0281 	CALL SUBOPT_0x9
0001ff 940e 0281 	CALL SUBOPT_0x9
000201 e2a0      	LDI  R26,LOW(32)
000202 df68      	RCALL __lcd_write_nibble_G101
                +
000203 ec88     +LDI R24 , LOW ( 200 )
000204 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000205 9701     +SBIW R24 , 1
000206 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000207 e2a8      	LDI  R26,LOW(40)
000208 df76      	RCALL __lcd_write_data
000209 e0a4      	LDI  R26,LOW(4)
00020a df74      	RCALL __lcd_write_data
00020b e8a5      	LDI  R26,LOW(133)
00020c df72      	RCALL __lcd_write_data
00020d e0a6      	LDI  R26,LOW(6)
00020e df70      	RCALL __lcd_write_data
00020f df8a      	RCALL _lcd_clear
                 _0x20E0001:
000210 9621      	ADIW R28,1
000211 9508      	RET
                 
                 	.CSEG
                 _itoa:
000212 93ba      	ST   -Y,R27
000213 93aa      	ST   -Y,R26
000214 91a9          ld   r26,y+
000215 91b9          ld   r27,y+
000216 91e9          ld   r30,y+
000217 91f9          ld   r31,y+
000218 9630          adiw r30,0
000219 f42a          brpl __itoa0
00021a 95e0          com  r30
00021b 95f0          com  r31
00021c 9631          adiw r30,1
00021d e26d          ldi  r22,'-'
00021e 936d          st   x+,r22
                 __itoa0:
00021f 94e8          clt
000220 e180          ldi  r24,low(10000)
000221 e297          ldi  r25,high(10000)
000222 d00d          rcall __itoa1
000223 ee88          ldi  r24,low(1000)
000224 e093          ldi  r25,high(1000)
000225 d00a          rcall __itoa1
000226 e684          ldi  r24,100
000227 2799          clr  r25
000228 d007          rcall __itoa1
000229 e08a          ldi  r24,10
00022a d005          rcall __itoa1
00022b 2f6e          mov  r22,r30
00022c d010          rcall __itoa5
00022d 2766          clr  r22
00022e 936c          st   x,r22
00022f 9508          ret
                 
                 __itoa1:
000230 2766          clr	 r22
                 __itoa2:
000231 17e8          cp   r30,r24
000232 07f9          cpc  r31,r25
000233 f020          brlo __itoa3
000234 9563          inc  r22
000235 1be8          sub  r30,r24
000236 0bf9          sbc  r31,r25
000237 f7c9          brne __itoa2
                 __itoa3:
000238 2366          tst  r22
000239 f411          brne __itoa4
00023a f016          brts __itoa5
00023b 9508          ret
                 __itoa4:
00023c 9468          set
                 __itoa5:
00023d 5d60          subi r22,-0x30
00023e 936d          st   x+,r22
00023f 9508          ret
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _bcd2bin:
000240 93aa      	ST   -Y,R26
000241 81e8          ld   r30,y
000242 95e2          swap r30
000243 70ef          andi r30,0xf
000244 2fae          mov  r26,r30
000245 0faa          lsl  r26
000246 0faa          lsl  r26
000247 0fea          add  r30,r26
000248 0fee          lsl  r30
000249 91a9          ld   r26,y+
00024a 70af          andi r26,0xf
00024b 0fea          add  r30,r26
00024c 9508          ret
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _s2:
00026e           	.BYTE 0x2
                 _s3:
000270           	.BYTE 0x2
                 _s4:
000272           	.BYTE 0x2
                 _s5:
000274           	.BYTE 0x2
                 _s6:
000276           	.BYTE 0x2
                 __base_y_G101:
000278           	.BYTE 0x4
                 __lcd_y:
00027c           	.BYTE 0x1
                 __lcd_maxx:
00027d           	.BYTE 0x1
                 __seed_G102:
00027e           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x0:
00024d e0f0      	LDI  R31,0
00024e 93fa      	ST   -Y,R31
00024f 93ea      	ST   -Y,R30
000250 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1:
000251 940e 01c1 	CALL _lcd_puts
                +
000253 e5a9     +LDI R26 , LOW ( 2 * _0x0 + ( 5 ) )
000254 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 5 ) )
                 	__POINTW2FN _0x0,5
000255 940c 01d0 	JMP  _lcd_putsf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2:
000257 940e 028e 	CALL _i2c_start
000259 eda0      	LDI  R26,LOW(208)
00025a 940c 02c2 	JMP  _i2c_write
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3:
00025c 940e 02c2 	CALL _i2c_write
00025e 940c 029d 	JMP  _i2c_stop
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4:
000260 940e 028e 	CALL _i2c_start
000262 eda1      	LDI  R26,LOW(209)
000263 940e 02c2 	CALL _i2c_write
000265 e0a1      	LDI  R26,LOW(1)
000266 940c 02a7 	JMP  _i2c_read
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5:
000268 2fae      	MOV  R26,R30
000269 940e 0240 	CALL _bcd2bin
00026b 81a8      	LD   R26,Y
00026c 81b9      	LDD  R27,Y+1
00026d 93ec      	ST   X,R30
00026e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x6:
00026f e0a1      	LDI  R26,LOW(1)
000270 940e 02a7 	CALL _i2c_read
000272 2fae      	MOV  R26,R30
000273 940c 0240 	JMP  _bcd2bin
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
000275 81aa      	LDD  R26,Y+2
000276 81bb      	LDD  R27,Y+2+1
000277 93ec      	ST   X,R30
000278 e0a0      	LDI  R26,LOW(0)
000279 940c 02a7 	JMP  _i2c_read
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x8:
00027b 940e 017f 	CALL __lcd_write_data
00027d e0a3      	LDI  R26,LOW(3)
00027e e0b0      	LDI  R27,0
00027f 940c 02da 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x9:
000281 e3a0      	LDI  R26,LOW(48)
000282 940e 016b 	CALL __lcd_write_nibble_G101
                +
000284 ec88     +LDI R24 , LOW ( 200 )
000285 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000286 9701     +SBIW R24 , 1
000287 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000288 9508      	RET
                 
                 
                 	.CSEG
                 	.equ __sda_bit=1
                 	.equ __scl_bit=0
                 	.equ __i2c_port=0x15 ;PORTC
                 	.equ __i2c_dir=__i2c_port-1
                 	.equ __i2c_pin=__i2c_port-2
                 
                 _i2c_init:
000289 98a8      	cbi  __i2c_port,__scl_bit
00028a 98a9      	cbi  __i2c_port,__sda_bit
00028b 9aa0      	sbi  __i2c_dir,__scl_bit
00028c 98a1      	cbi  __i2c_dir,__sda_bit
00028d c015      	rjmp __i2c_delay2
                 _i2c_start:
00028e 98a1      	cbi  __i2c_dir,__sda_bit
00028f 98a0      	cbi  __i2c_dir,__scl_bit
000290 27ee      	clr  r30
000291 0000      	nop
000292 9b99      	sbis __i2c_pin,__sda_bit
000293 9508      	ret
000294 9b98      	sbis __i2c_pin,__scl_bit
000295 9508      	ret
000296 d004      	rcall __i2c_delay1
000297 9aa1      	sbi  __i2c_dir,__sda_bit
000298 d002      	rcall __i2c_delay1
000299 9aa0      	sbi  __i2c_dir,__scl_bit
00029a e0e1      	ldi  r30,1
                 __i2c_delay1:
00029b e06d      	ldi  r22,13
00029c c007      	rjmp __i2c_delay2l
                 _i2c_stop:
00029d 9aa1      	sbi  __i2c_dir,__sda_bit
00029e 9aa0      	sbi  __i2c_dir,__scl_bit
00029f d003      	rcall __i2c_delay2
0002a0 98a0      	cbi  __i2c_dir,__scl_bit
0002a1 dff9      	rcall __i2c_delay1
0002a2 98a1      	cbi  __i2c_dir,__sda_bit
                 __i2c_delay2:
0002a3 e16b      	ldi  r22,27
                 __i2c_delay2l:
0002a4 956a      	dec  r22
0002a5 f7f1      	brne __i2c_delay2l
0002a6 9508      	ret
                 _i2c_read:
0002a7 e078      	ldi  r23,8
                 __i2c_read0:
0002a8 98a0      	cbi  __i2c_dir,__scl_bit
0002a9 dff1      	rcall __i2c_delay1
                 __i2c_read3:
0002aa 9b98      	sbis __i2c_pin,__scl_bit
0002ab cffe      	rjmp __i2c_read3
0002ac dfee      	rcall __i2c_delay1
0002ad 9488      	clc
0002ae 9999      	sbic __i2c_pin,__sda_bit
0002af 9408      	sec
0002b0 9aa0      	sbi  __i2c_dir,__scl_bit
0002b1 dff1      	rcall __i2c_delay2
0002b2 1fee      	rol  r30
0002b3 957a      	dec  r23
0002b4 f799      	brne __i2c_read0
0002b5 2f7a      	mov  r23,r26
0002b6 2377      	tst  r23
0002b7 f411      	brne __i2c_read1
0002b8 98a1      	cbi  __i2c_dir,__sda_bit
0002b9 c001      	rjmp __i2c_read2
                 __i2c_read1:
0002ba 9aa1      	sbi  __i2c_dir,__sda_bit
                 __i2c_read2:
0002bb dfdf      	rcall __i2c_delay1
0002bc 98a0      	cbi  __i2c_dir,__scl_bit
0002bd dfe5      	rcall __i2c_delay2
0002be 9aa0      	sbi  __i2c_dir,__scl_bit
0002bf dfdb      	rcall __i2c_delay1
0002c0 98a1      	cbi  __i2c_dir,__sda_bit
0002c1 cfd9      	rjmp __i2c_delay1
                 
                 _i2c_write:
0002c2 e078      	ldi  r23,8
                 __i2c_write0:
0002c3 0faa      	lsl  r26
0002c4 f410      	brcc __i2c_write1
0002c5 98a1      	cbi  __i2c_dir,__sda_bit
0002c6 c001      	rjmp __i2c_write2
                 __i2c_write1:
0002c7 9aa1      	sbi  __i2c_dir,__sda_bit
                 __i2c_write2:
0002c8 dfda      	rcall __i2c_delay2
0002c9 98a0      	cbi  __i2c_dir,__scl_bit
0002ca dfd0      	rcall __i2c_delay1
                 __i2c_write3:
0002cb 9b98      	sbis __i2c_pin,__scl_bit
0002cc cffe      	rjmp __i2c_write3
0002cd dfcd      	rcall __i2c_delay1
0002ce 9aa0      	sbi  __i2c_dir,__scl_bit
0002cf 957a      	dec  r23
0002d0 f791      	brne __i2c_write0
0002d1 98a1      	cbi  __i2c_dir,__sda_bit
0002d2 dfc8      	rcall __i2c_delay1
0002d3 98a0      	cbi  __i2c_dir,__scl_bit
0002d4 dfce      	rcall __i2c_delay2
0002d5 e0e1      	ldi  r30,1
0002d6 9999      	sbic __i2c_pin,__sda_bit
0002d7 27ee      	clr  r30
0002d8 9aa0      	sbi  __i2c_dir,__scl_bit
0002d9 cfc1      	rjmp __i2c_delay1
                 
                 _delay_ms:
0002da 9610      	adiw r26,0
0002db f039      	breq __delay_ms1
                 __delay_ms0:
                +
0002dc ed80     +LDI R24 , LOW ( 0x7D0 )
0002dd e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
0002de 9701     +SBIW R24 , 1
0002df f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
0002e0 95a8      	wdr
0002e1 9711      	sbiw r26,1
0002e2 f7c9      	brne __delay_ms0
                 __delay_ms1:
0002e3 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :   4 r1 :   1 r2 :   0 r3 :   0 r4 :   1 r5 :   1 r6 :   0 r7 :   1 
r8 :   1 r9 :   1 r10:   4 r11:   1 r12:   2 r13:   0 r14:   0 r15:   0 
r16:   0 r17:   7 r18:   0 r19:   0 r20:   0 r21:   0 r22:  15 r23:   6 
r24:  27 r25:  10 r26:  99 r27:  35 r28:   6 r29:   1 r30: 135 r31:  25 
x  :  12 y  :  86 z  :   9 
Registers used: 24 out of 35 (68.6%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   0 add   :   3 
adiw  :   9 and   :   0 andi  :   5 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :   7 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   2 
brlt  :   0 brmi  :   0 brne  :  18 brpl  :   1 brsh  :   0 brtc  :   0 
brts  :   1 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  52 
cbi   :  20 cbr   :   0 clc   :   1 clh   :   0 cli   :   1 cln   :   0 
clr   :   7 cls   :   0 clt   :   1 clv   :   0 clz   :   0 com   :   2 
cp    :   2 cpc   :   1 cpi   :   6 cpse  :   0 dec   :   8 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   2 inc   :   2 jmp   :  29 ld    :  21 ldd   :  21 ldi   :  99 
lds   :  22 lpm   :   9 lsl   :   4 lsr   :   0 mov   :  18 movw  :   5 
mul   :   0 muls  :   0 mulsu :   0 neg   :   0 nop   :   1 or    :   1 
ori   :   3 out   :  18 pop   :   0 push  :   0 rcall :  49 ret   :  17 
reti  :   0 rjmp  :  19 rol   :   1 ror   :   0 sbc   :   1 sbci  :   1 
sbi   :  16 sbic  :   2 sbis  :   4 sbiw  :   8 sbr   :   0 sbrc  :   0 
sbrs  :   0 sec   :   1 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   1 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  50 std   :   7 sts   :   6 sub   :   1 subi  :   5 swap  :   2 
tst   :   2 wdr   :   1 
Instructions used: 55 out of 116 (47.4%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0005c8   1410     70   1480   32768   4.5%
[.dseg] 0x000060 0x000282      0     34     34    2143   1.6%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 12 warnings
